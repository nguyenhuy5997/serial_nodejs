"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("should");
var index_1 = require("../index");
describe("UnsafeParsing", function () {
    it("Built in NMEA sentence", function () {
        var packet = index_1.parseUnsafeNmeaSentence("$GPZDA,160012.71,11,03,2004,-1,00*7D");
        if (packet.sentenceId !== "ZDA") {
            throw Error("sentenceId should be \"ZDA\"");
        }
        packet.localZoneHours.should.equal(-1);
    });
    it("Unknown sentence", function () {
        var packet = index_1.parseUnsafeNmeaSentence("$GPTXT,01,01,02,ANTSTATUS=OPEN*2B");
        if (packet.sentenceId !== "?") {
            throw Error("sentenceId should be \"?\"");
        }
        packet.dataFields.length.should.equal(4);
        (packet.talkerId === "GP").should.equal(true);
        index_1.getUnsafePacketId(packet).should.equal("TXT");
    });
    var BAD_CHECKSUM_SENTENCE = "$IIHDM,201.5,M*21";
    var GOOD_CHECKSUM_SENTENCE = "$IIDBT,036.41,f,011.10,M,005.99,F*25";
    it("checksum", function () {
        var packet = index_1.parseUnsafeNmeaSentence(BAD_CHECKSUM_SENTENCE);
        (packet.chxOk !== true).should.equal(true);
        packet = index_1.parseUnsafeNmeaSentence(GOOD_CHECKSUM_SENTENCE);
        (packet.chxOk === true).should.equal(true);
    });
});
