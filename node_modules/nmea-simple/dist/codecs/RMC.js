"use strict";
/*
 * === RMC - Recommended minimum navigation information ===
 *
 * ------------------------------------------------------------------------------
 *                                                              12
 *        1         2 3       4 5        6 7   8   9      10  11|  13
 *        |         | |       | |        | |   |   |      |   | |  |
 * $--RMC,hhmmss.ss,A,llll.ll,a,yyyyy.yy,a,x.x,x.x,ddmmyy,x.x,a,m,*hh<CR><LF>
 * ------------------------------------------------------------------------------
 *
 * Field Number:
 * 1. UTC Time
 * 2. Status
 *    A = Valid
 *    V = Navigation receiver warning
 * 3. Latitude
 * 4. N or S
 * 5. Longitude
 * 6. E or W
 * 7. Speed over ground, knots
 * 8. Track made good, degrees true
 * 9. Date, ddmmyy
 * 10. Magnetic Variation, degrees
 * 11. E or W
 * 12. FAA mode indicator (NMEA 2.3 and later)
 * 13. Checksum
 */
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var helpers_1 = require("../helpers");
var PacketStub_1 = require("./PacketStub");
exports.sentenceId = "RMC";
exports.sentenceName = "Recommended minimum navigation information";
function decodeSentence(stub, fields) {
    return __assign(__assign({}, PacketStub_1.initStubFields(stub, exports.sentenceId, exports.sentenceName)), { datetime: helpers_1.parseDatetime(fields[9], fields[1]), status: fields[2] === "A" ? "valid" : "warning", latitude: helpers_1.parseLatitude(fields[3], fields[4]), longitude: helpers_1.parseLongitude(fields[5], fields[6]), speedKnots: helpers_1.parseFloatSafe(fields[7]), trackTrue: helpers_1.parseFloatSafe(fields[8]), variation: helpers_1.parseFloatSafe(fields[10]), variationPole: fields[11] === "E" ? "E" : fields[11] === "W" ? "W" : "", faaMode: fields[12] });
}
exports.decodeSentence = decodeSentence;
