"use strict";
/*
 * === ZDA - Time & Date - UTC, day, month, year and local time zone ===
 *
 * ------------------------------------------------------------------------------
 *	      1         2  3  4    5  6  7
 *        |         |  |  |    |  |  |
 * $--ZDA,hhmmss.ss,dd,mm,yyyy,zz,zz*hh<CR><LF>
 * ------------------------------------------------------------------------------
 *
 * Field Number:
 * 1. UTC time (hours, minutes, seconds, may have fractional subsecond)
 * 2. Day, 01 to 31
 * 3. Month, 01 to 12
 * 4. Year (4 digits)
 * 5. Local zone description, 00 to +- 13 hours
 * 6. Local zone minutes description, 00 to 59, apply same sign as local hours
 * 7. Checksum
 */
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var helpers_1 = require("../helpers");
var PacketStub_1 = require("./PacketStub");
exports.sentenceId = "ZDA";
exports.sentenceName = "UTC, day, month, year, and local time zone";
function decodeSentence(stub, fields) {
    return __assign(__assign({}, PacketStub_1.initStubFields(stub, exports.sentenceId, exports.sentenceName)), { datetime: helpers_1.parseTime(fields[1], fields.slice(2, 5).join("")), localZoneHours: helpers_1.parseIntSafe(fields[5]), localZoneMinutes: helpers_1.parseIntSafe(fields[6]) });
}
exports.decodeSentence = decodeSentence;
