"use strict";
/*
 * === DBT - Depth below transducer ===
 *
 * ------------------------------------------------------------------------------
 *        1   2 3   4 5   6 7
 *        |   | |   | |   | |
 * $--DBT,x.x,f,x.x,M,x.x,F*hh<CR><LF>
 * ------------------------------------------------------------------------------
 *
 * Field Number:
 * 1. Depth, feet
 * 2. f = feet
 * 3. Depth, meters
 * 4. M = meters
 * 5. Depth, Fathoms
 * 6. F = Fathoms
 * 7. Checksum
 */
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var helpers_1 = require("../helpers");
var PacketStub_1 = require("./PacketStub");
exports.sentenceId = "DBT";
exports.sentenceName = "Depth below transducer";
function decodeSentence(stub, fields) {
    return __assign(__assign({}, PacketStub_1.initStubFields(stub, exports.sentenceId, exports.sentenceName)), { depthFeet: helpers_1.parseFloatSafe(fields[1]), depthMeters: helpers_1.parseFloatSafe(fields[3]), depthFathoms: helpers_1.parseFloatSafe(fields[5]) });
}
exports.decodeSentence = decodeSentence;
function encodePacket(packet, talker) {
    var result = ["$" + talker + exports.sentenceId];
    result.push(helpers_1.encodeFixed(packet.depthFeet, 2));
    result.push("f");
    result.push(helpers_1.encodeFixed(packet.depthMeters, 2));
    result.push("M");
    result.push(helpers_1.encodeFixed(packet.depthFathoms, 2));
    result.push("F");
    var resultWithoutChecksum = result.join(",");
    return resultWithoutChecksum + helpers_1.createNmeaChecksumFooter(resultWithoutChecksum);
}
exports.encodePacket = encodePacket;
